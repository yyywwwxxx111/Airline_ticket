<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mapper.UserMapper">
  <resultMap id="BaseResultMap" type="com.common.domain.User">
    <id column="uid_pk" jdbcType="BIGINT" property="uidPk" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="gender" jdbcType="CHAR" property="gender" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
    <result column="password2" jdbcType="VARCHAR" property="password2" />
    <result column="is_login" jdbcType="INTEGER" property="isLogin" />
    <result column="major" jdbcType="VARCHAR" property="major" />
    <result column="exp" jdbcType="VARCHAR" property="exp" />
    <result column="school" jdbcType="VARCHAR" property="school" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    uid_pk, name, password, gender, email, phone, password2, is_login, major, exp, school
  </sql>
  <select id="selectByExample" parameterType="com.common.domain.UserExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from USER
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from USER
    where uid_pk = #{uidPk,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from USER
    where uid_pk = #{uidPk,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.common.domain.UserExample">
    delete from USER
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.common.domain.User">
    insert into USER (uid_pk, name, password, 
      gender, email, phone, 
      password2, is_login, major, 
      exp, school)
    values (#{uidPk,jdbcType=BIGINT}, #{name,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{gender,jdbcType=CHAR}, #{email,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR}, 
      #{password2,jdbcType=VARCHAR}, #{isLogin,jdbcType=INTEGER}, #{major,jdbcType=VARCHAR}, 
      #{exp,jdbcType=VARCHAR}, #{school,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.common.domain.User">
    insert into USER
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="uidPk != null">
        uid_pk,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="gender != null">
        gender,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="phone != null">
        phone,
      </if>
      <if test="password2 != null">
        password2,
      </if>
      <if test="isLogin != null">
        is_login,
      </if>
      <if test="major != null">
        major,
      </if>
      <if test="exp != null">
        exp,
      </if>
      <if test="school != null">
        school,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="uidPk != null">
        #{uidPk,jdbcType=BIGINT},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="gender != null">
        #{gender,jdbcType=CHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="password2 != null">
        #{password2,jdbcType=VARCHAR},
      </if>
      <if test="isLogin != null">
        #{isLogin,jdbcType=INTEGER},
      </if>
      <if test="major != null">
        #{major,jdbcType=VARCHAR},
      </if>
      <if test="exp != null">
        #{exp,jdbcType=VARCHAR},
      </if>
      <if test="school != null">
        #{school,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.common.domain.UserExample" resultType="java.lang.Long">
    select count(*) from USER
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update USER
    <set>
      <if test="record.uidPk != null">
        uid_pk = #{record.uidPk,jdbcType=BIGINT},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.password != null">
        password = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.gender != null">
        gender = #{record.gender,jdbcType=CHAR},
      </if>
      <if test="record.email != null">
        email = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.phone != null">
        phone = #{record.phone,jdbcType=VARCHAR},
      </if>
      <if test="record.password2 != null">
        password2 = #{record.password2,jdbcType=VARCHAR},
      </if>
      <if test="record.isLogin != null">
        is_login = #{record.isLogin,jdbcType=INTEGER},
      </if>
      <if test="record.major != null">
        major = #{record.major,jdbcType=VARCHAR},
      </if>
      <if test="record.exp != null">
        exp = #{record.exp,jdbcType=VARCHAR},
      </if>
      <if test="record.school != null">
        school = #{record.school,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update USER
    set uid_pk = #{record.uidPk,jdbcType=BIGINT},
      name = #{record.name,jdbcType=VARCHAR},
      password = #{record.password,jdbcType=VARCHAR},
      gender = #{record.gender,jdbcType=CHAR},
      email = #{record.email,jdbcType=VARCHAR},
      phone = #{record.phone,jdbcType=VARCHAR},
      password2 = #{record.password2,jdbcType=VARCHAR},
      is_login = #{record.isLogin,jdbcType=INTEGER},
      major = #{record.major,jdbcType=VARCHAR},
      exp = #{record.exp,jdbcType=VARCHAR},
      school = #{record.school,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.common.domain.User">
    update USER
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="gender != null">
        gender = #{gender,jdbcType=CHAR},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="password2 != null">
        password2 = #{password2,jdbcType=VARCHAR},
      </if>
      <if test="isLogin != null">
        is_login = #{isLogin,jdbcType=INTEGER},
      </if>
      <if test="major != null">
        major = #{major,jdbcType=VARCHAR},
      </if>
      <if test="exp != null">
        exp = #{exp,jdbcType=VARCHAR},
      </if>
      <if test="school != null">
        school = #{school,jdbcType=VARCHAR},
      </if>
    </set>
    where uid_pk = #{uidPk,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.common.domain.User">
    update USER
    set name = #{name,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      gender = #{gender,jdbcType=CHAR},
      email = #{email,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      password2 = #{password2,jdbcType=VARCHAR},
      is_login = #{isLogin,jdbcType=INTEGER},
      major = #{major,jdbcType=VARCHAR},
      exp = #{exp,jdbcType=VARCHAR},
      school = #{school,jdbcType=VARCHAR}
    where uid_pk = #{uidPk,jdbcType=BIGINT}
  </update>
</mapper>